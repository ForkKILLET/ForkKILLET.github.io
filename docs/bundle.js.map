{
  "version": 3,
  "sources": ["../src/utils.ts", "../src/mixins.ts", "../src/icon.ts", "../src/wlog.ts", "../src/node.ts", "../src/init.ts"],
  "sourcesContent": ["// :: Utils\n\nconst fetchData = async (url: string, res: \"text\" | \"json\" = \"text\", opt?: any) =>\n\tawait (await fetch(\"/FkData/\" + url, opt))[res]()\n\nconst openUrl = (u: string) => {\n\tlet external = false\n\tif (u.startsWith(\"//\")) external = true\n\telse if (location.hostname === \"localhost\") {\n\t\tlet dirs = u.split(\"/\")\n\t\tif (\n\t\t\t! dirs[0] &&\n\t\t\t[ \"HardWayNazo\", \"TrainProblemEmulator\" ].includes(dirs[1])\n\t\t) dirs = [ ...dirs.slice(0, 2), \"docs\", ...dirs.slice(2) ]\n\t\telse dirs.unshift(\"docs\")\n\t\tif (! dirs.slice(-1)[0].endsWith(\".html\")) dirs.push(\"index.html\")\n\t\tu = dirs.join(\"/\")\n\t}\n\twindow.open(u, external ? \"_blank\" : \"_self\")\n}\n\n// :: Export\n\nexport { fetchData, openUrl }\n\n", "// :: Import\n\nimport { fetchData } from \"./utils.js\"\n\n// :: Mixins\n\ntype Ctor<T> = new (...arg: any[]) => T\ntype Mixin<I, S = never> = <T> (B: Ctor<T>) => (Ctor<T | I> | S)\n\nconst MixWith = <T> (B: Ctor<T>, ...mixins: Mixin<any, any>[]) =>\n\tmixins.length\n\t\t? MixWith(mixins[0](B), ...mixins.slice(1))\n\t\t: B\nconst Mix = (...mixins: Mixin<any, any>[]) => MixWith(Object, ...mixins)\n\ninterface ILog {\n\tlog(...msg: any[]): void\n\terr(...msg: any[]): void\n}\nconst Log = (text: string, bgColor: string): Mixin<ILog> =>\n\t<T> (B: Ctor<T>) => class extends (B ?? Object) {\n\t\tlog(format: string, ...msg: any[]) {\n\t\t\tconsole.log(\n\t\t\t\t`%c${text}%c ${format}`, `\nborder-radius: 7px;\npadding: 1px 3px;\ncolor: white;\nbackground-color: ${bgColor};\nbox-shadow: 0 0 5px white;\n`, ``,\n\t\t\t\t...msg\n\t\t\t)\n\t\t}\n\t\terr(...msg: any[]) {\n\t\t\tconsole.error(\n\t\t\t\t`%c${text}`, `\nborder-radius: 7px;\npadding: 1px 3px;\ncolor: white;\nbackground-color: ${bgColor};\nbox-shadow: 0 0 5px red;\n`,\n\t\t\t\t...msg\n\t\t\t)\n\t\t}\n\t}\n\ninterface IFromData {\n\tname: string\n}\ninterface SFromData {\n\tfromData(name: string): Promise<any>\n}\nconst FromData = (prefix: string, postfix: string): Mixin<IFromData, SFromData> =>\n\t<T> (B: Ctor<T>) => class extends (B ?? Object) {\n\t\tname: string\n\t\tstatic async fromData(name: string) {\n\t\t\tconst instance = new this(await fetchData(prefix + name + postfix))\n\t\t\tinstance.name = name\n\t\t\treturn instance\n\t\t}\n\t}\n\n// :: Export\n\nexport { Mix, MixWith, Log, FromData }\n\n", "// :: Import\n\nimport { Mix, Log, FromData } from \"./mixins.js\"\n\n// :: Work\n\nclass Icon extends Mix(\n    Log(\"icon\", \"orange\"),\n    FromData(\"icon/\", \".tico\")\n) {\n\tstatic dotSize = 4\n\tdotColor = {\n\t\t\"#\": \"black\",\n\t\t\" \": \"white\",\n\t\t\"R\": \"red\",\n\t\t\"r\": \"darksalmon\",\n\t\t\"B\": \"blue\",\n\t\t\"b\": \"cornflowerblue\",\n\t\t\"M\": \"rebeccapurple\",\n\t\t\"m\": \"magenta\",\n\t\t\"9\": \"grey\",\n\t\t\"G\": \"green\",\n\t\t\"g\": \"lightgreen\"\n\t}\n\n\tmatrix: string[][]\n\tname?: string\n\n\tconstructor(text: string) {\n\t\tsuper()\n\n\t\tconst lines = text.split(\"\\n\")\n\t\tconst config = lines[0] === \"<<<\" ? {} : JSON.parse(lines[0])\n\t\tconst main = lines.slice(\n\t\t\tlines.findIndex(l => l === \"<<<\") + 1,\n\t\t\tlines.findIndex(l => l === \">>>\")\n\t\t)\n\t\tif (config.color) Object.assign(this.dotColor, config.color)\n\t\tthis.matrix = main.map(l => l.split(\"\").map(c => this.dotColor[c]))\n\t}\n\n\tpaint(cvs: HTMLCanvasElement) {\n\t\tthis.log(\"Painting icon. name: `%s`\", this.name)\n\n\t\tcvs.width = this.matrix[0].length * Icon.dotSize\n\t\tcvs.height = this.matrix.length * Icon.dotSize\n\t\tconst ctx = cvs.getContext(\"2d\")\n\t\tfor (let y = 0; y < this.matrix.length; y ++)\n\t\tfor (let x = 0; x < this.matrix[y].length; x ++) {\n\t\t\tctx.fillStyle = this.matrix[y][x]\n\t\t\tctx.fillRect(x * Icon.dotSize, y * Icon.dotSize, Icon.dotSize, Icon.dotSize)\n\t\t}\n\t}\n}\n\n// :: Export\n\nexport { Icon }\n\n", "// :: Import\n\nimport { Mix, Log, FromData } from \"./mixins.js\"\n\n// :: Work\n\nclass Wlog extends Mix(\n\tLog(\"wlog\", \"cornflowerblue\"),\n\tFromData(\"wlog/\", \".md\")\n) {\n\tconstructor(public text: string) {\n\t\tsuper()\n    }\n\tparse(): string {\n\t\tthis.log(\"Parsing wlog. name: `%s`\", this.name)\n\n\t\ttype replacer = [\n\t\t\tRegExp,\n\t\t\tstring | ((...g: string[]) => string)\n\t\t]\n\t\tconst syntaxWrap = (\n\t\t\twrapper: string, inline: boolean,\n\t\t\tf: (text: string) => string\n\t\t): replacer => {\n\t\t\twrapper = wrapper.replace(/[.*+?]/g, c => \"\\\\\" + c)\n\t\t\tconst unescaped = String.raw`(?<!\\\\)((?:\\\\\\\\)*)` + wrapper\n\t\t\tconst escaped = `\\\\\\\\([\\\\${ wrapper[0] }])`\n\t\t\treturn [\n\t\t\t\tRegExp(unescaped + `(${ inline ? \"[^\\\\n]\" : \".\" }+?)` + unescaped, \"g\"),\n\t\t\t\t(_, __, text) => f(text.replace(RegExp(escaped, \"g\"), (_, withoutSlash) => withoutSlash))\n\t\t\t]\n\t\t}\n\t\tconst syntax: replacer[] = [\n\t\t\t[ /^#! (\\S+\\/)+\\n/m, (_, tags) =>\n\t\t\t\ttags.split(\"/\").map(tag => tag\n\t\t\t\t\t? `<mark>${tag}</mark>` : \"\"\n\t\t\t\t).join(\"\")\n\t\t\t],\n\t\t\t[ /^(#{1,6}) (.+)$/mg, (_, sharps, text) => {\n\t\t\t\tconst hx = \"h\" + sharps.length\n\t\t\t\treturn `<${hx}>${text}</${hx}>`\n\t\t\t} ],\n\t\t\tsyntaxWrap(\"`\", true, text => `<code>${text}</code>`),\n\t\t\tsyntaxWrap(\"**\", false, text => `<strong>${text}</strong>`),\n\t\t\tsyntaxWrap(\"_\", false, text => `<em>${text}</em>`),\n\t\t\t[ / {2}\\n/g, \"<br />\" ]\n\t\t]\n\t\tconst replaced: string[] = []\n\t\treturn syntax.reduce((t, p: replacer) => t.replace(p[0], (...arg) => {\n\t\t\treplaced.push(typeof p[1] === \"function\" ? p[1](...arg) : p[1])\n\t\t\treturn `@@${ replaced.length - 1 }@@`\n\t\t}), this.text).replace(/@@(\\d+)@@/g, (_, id) => replaced[ + id ])\n\t}\n}\n\n// :: Export\n\nexport { Wlog }\n\n", "// :: Import\n\nimport { Mix, Log } from \"./mixins.js\"\nimport { openUrl } from \"./utils.js\"\nimport { Icon } from \"./icon.js\"\nimport { Wlog } from \"./wlog.js\"\n\n// :: Work\n\ntype NodeRenderCb = ({\n\te, c: HTMLDivElement\n}) => any\n\nclass Node extends Mix(\n    Log(\"node\", \"forestgreen\"),\n) {\n\tstatic layerColor = [ \"white\", \"white\", \"aliceblue\", \"cornflowerblue\", \"lightgrey\" ]\n\n\tconstructor(\n\t\tpublic parent: Node,\n\t) {\n\t\tsuper()\n\t\tif (this.parent) this.parent.children.push(this)\n\t\tthis.layer = (parent?.layer ?? -1) + 1\n\t}\n\n\tprivate qRenderCb: NodeRenderCb[] = []\n\tprivate q(cb: NodeRenderCb) {\n\t\tthis.qRenderCb.push(cb)\n\t\treturn this\n\t}\n\n\trender() {\n\t\tif (this.parent && ! this.parent.e) this.err(\"Rendering without parent rendered.\")\n\n\t\tthis.e = document.createElement(\"div\")\n\t\tthis.e.classList.add(\"node\")\n\t\t\n\t\tthis.eContent = document.createElement(\"div\")\n\t\tthis.eContent.classList.add(\"node-content\")\n\t\tthis.e.appendChild(this.eContent)\n\n\t\tthis.eChildren = document.createElement(\"div\")\n\t\tthis.eChildren.classList.add(\"node-children\")\n\t\tthis.e.appendChild(this.eChildren)\n\n\t\tthis.e.style.backgroundColor = Node.layerColor[ this.layer ]\n\n\t\tthis.qRenderCb.forEach(cb => cb({\n\t\t\te: this.e, c: this.eContent\n\t\t}));\n\n\t\t(this.parent?.eChildren ?? document.body).appendChild(this.e)\n\n\t\tthis.log(`Rendering node at layer ${ this.layer }. content:`, this.eContent.innerText)\n\n\t\tthis.children.forEach(n => n.render())\n\t}\n\n\te: HTMLDivElement\n\teContent: HTMLDivElement\n\teChildren: HTMLDivElement\n\n\tlayer: number\n\n\tprivate children: Node[] = []\n\n\t// :::: Chain\n\n\tpublic title(t: string) {\n\t\treturn this.q(({ c }) => {\n\t\t\tconst eTitle = document.createElement(\"div\")\n\t\t\teTitle.classList.add(\"node-content-text\")\n\t\t\teTitle.innerText = t\n\t\t\tc.appendChild(eTitle)\n\t\t})\n\t}\n\n\tpublic link(url: string) {\n\t\treturn this.class(\"link\").q(({ e }) =>\n\t\t\te.addEventListener(\"click\", () => openUrl(url))\n\t\t)\n\t}\n\n\tpublic class(className: string) {\n\t\treturn this.q(({ e }) => e.classList.add(className))\n\t}\n\n\tpublic async icon(icon: string | Icon) {\n\t\tconst nIcon = await Icon.fromData(icon)\n\t\treturn this.q(({ c }) => {\n\t\t\tconst eIcon = document.createElement(\"canvas\")\n\t\t\teIcon.classList.add(\"node-content-icon\")\n\t\t\tc.appendChild(eIcon)\n\t\t\tnIcon.paint(eIcon)\n\t\t})\n\t}\n\n\tpublic async wlog(wlog: string) {\n\t\tconst nWlog = await Wlog.fromData(wlog)\n\t\treturn this.q(({ c }) => {\n\t\t\tconst eWlog = document.createElement(\"div\")\n            eWlog.innerHTML = nWlog.parse()\n\t\t\teWlog.classList.add(\"node-content-wlog\")\n\t\t\tc.appendChild(eWlog)\n\t\t})\n\t}\n}\n\nconst $ = (parent: Node) => new Node(parent)\nconst $top = $(null).class(\"top\")\n\n// :: Export\n\nexport { $top, $ }\n\n", "// :: Init\n\nimport { $top, $ } from \"./node.js\"\n\nconst init = async () => {\n\nconst\n\t$about = await $($top).title(\"IceLavaTop\").icon(\"il\"),\n\t$games = $($top).title(\"Games\"),\n\t\t$hwn = await $($games).title(\"HardWayNazo\").link(\"/HardWayNazo\").icon(\"hwn\"),\n\t\t$tpe = await $($games).title(\"TrolleyProblemEmulator\").link(\"/TrolleyProblemEmulator\").icon(\"tpe\"),\n\t\t$som = await $($games).title(\"SudoerOfMyself\").link(\"/SudoerOfMyself\").icon(\"som\"),\n\t$novels = $($top).title(\"Novels\"),\n\t\t$xbqg = $($novels).title(\"TerminalXbqg\").link(\"//github.com/ForkKILLET/TerminalXbqg\"),\n\t$friends = $($top).title(\"Friends\"),\n\t$OI = $($top).title(\"About OI\"),\n\t\t$exlg = await $($OI).title(\"Extend Luogu\").link(\"//github.com/optimize-2/extend-luogu\").icon(\"exlg\"),\n\t$wlog = $($top).title(\"Fork\u03A8KILLET's wlog\"),\n\t\t$home = await $($wlog).wlog(\"home\")\n\n$top.render()\n\n}\n\nwindow.addEventListener(\"load\", init)\n\n"],
  "mappings": "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",
  "names": []
}
